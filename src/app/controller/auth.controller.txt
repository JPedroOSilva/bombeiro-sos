const express = require('express');
const bcrypt = require('bcryptjs');
const jwt = require('jsonwebtoken');
const crypto = require('crypto');
const mailer = require('../../modules/mailer.modules');

const authConfig = require('../../config/auth.config') 

const User = require('../models/user.model');

const router = express.Router();

function generateToken(params = {}){
  return jwt.sign(params,authConfig.secret,{
    expiresIn: 86400,
  })
}

router.post('/register', async (req, res) => {
  const { email } = req.body;
  try {
    if (await User.findOne({ email })) {
      return res.status(400).send({ error: 'E-mail already exists!' });
    }
    const user = await User.create(req.body);

    user.password = undefined;

    return res.send({ 
      user,
      token:generateToken({ id:user.id }),
    });
  } catch (err) {
    return res.status(400).send({ error: 'Registration failed.' });
  }
});

router.post('/authenticate',async (req,res)=>{
  const {email, password } = req.body;

  const user = await User.findOne({email}).select('+password');

  if(!user){
    return res.status(400).send({ error: 'UsuÃ¡rio nÃ£o existe'})
  }

  if (!await bcrypt.compare(password,user.password)){
    return res.status(400).send({ error: 'Senha Invalida'})
  }
  
  user.password = undefined;

  res.send({
    user,
    token:generateToken({ id: user.id })
  });
})

router.post('/forgot_password',async (req,res)=>{
  const { email } = req.body

  try{
    const user = await User.findOne({ email})

    if (!user){
      res.status(400).send({error: 'Erro de senha esquecida, tente novamente !'})
    }

    const token = crypto.randomBytes(20).toString('hex')
    
    const now = new Date();
    now.setHours(now.getHours()+1)
    await User.findByIdAndUpdate(user.id,{
      '$set':{
        passwordResetToken: token,
        passwordResetExpire : now
      }
    })

    mailer.sendMail({
      to: email,
      from: 'appbombeiro@gmail.com',
      template: 'auth/forgot_password',
      context: { token:token },
    },(err) =>{
      if (err){
        console.log(err)
        return res.status(400).send({ error: 'Cannot send forgot password email'})
      }
      return res.send();
    })

  }catch(err){
    res.status(400).send({error: 'Erro de senha esquecida, tente novamente !'})
  }

})

module.exports = (app) => app.use('/auth', router);
